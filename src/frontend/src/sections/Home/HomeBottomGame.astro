<script>
  import Canvas from '../../components/spaceGame/'

  // Use Intersection Observer to see if container is sight\

  document.addEventListener('astro:page-load', () => {
    let canvas = new Canvas()

    const observer = new IntersectionObserver(
      (entries, _observer) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            if (!canvas) canvas = new Canvas()
            canvas.init()
            window.scrollTo({
              left: 0,
              top: document.body.scrollHeight,
              behavior: 'smooth'
            })
            canvas.demo()
          } else {
            canvas = null as unknown as Canvas // remove canvas
          }
        })
      },
      { threshold: 0.7 }
    )
    const container = document.querySelector('#canvas-container')
    container &&
      observer.observe(document.querySelector('#canvas-container') as Element)
  })
</script>

<div id='canvas-container' class='container'>
  <canvas id='canvas'></canvas>
  <div class='keys'>
    <span id='up' class='key up'>▲</span><span id='left' class='key left'
      >◀</span
    ><span id='down' class='key down'>▼</span><span id='right' class='key right'
      >▶</span
    >
  </div>
</div>

<style>
  .container {
    position: relative;
    width: 100%;
    height: 100%;
    margin-top: 5px;
    background: linear-gradient(88deg, #efefef, #e7e7e7);
  }

  canvas {
    max-height: 600px;
  }

  .keys {
    position: absolute;
    bottom: 1em;
    text-align: center;
    font-size: 25px;
    width: 100%;
    margin-left: (5em * 3 + 0, 4rem * 6) / -2;

    .key {
      margin: 0 0.4rem;
      display: inline-block;
      line-height: 2.5em;
      width: 5em;
      border-radius: 0.4em;
      background-color: transparent;

      &.up {
        margin: 0 5em 0.4rem * 2;
      }
      &:hover,
      &.is-down {
        background-color: #2f3231;
        color: white;
      }
    }
  }
</style>
